set-option -g prefix C-a
unbind-key C-b
bind C-a send-prefix

setw -g mode-keys vi
set -g mouse on
set -g renumber-windows on

set -g pane-active-border-style fg=white
set -g pane-border-style fg=colour240

set -g mode-style fg=black,bg=colour248

set -s escape-time 0

bind K resize-pane -U 1
bind J resize-pane -D 1
bind H resize-pane -L 2
bind L resize-pane -R 2

bind k select-pane -U
bind C-k select-pane -U
bind j select-pane -D
bind C-j select-pane -D
bind h select-pane -L
bind C-h select-pane -L
bind l select-pane -R
bind C-l select-pane -R

unbind p
bind n previous-window
bind C-n previous-window
bind m next-window
bind C-m next-window
bind c new-window -a -c "#{pane_current_path}"
bind C-c new-window -a -c "#{pane_current_path}"
bind N swap-window -t -1
bind M swap-window -t +1
bind '"' split-window -v -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"

bind [ copy-mode -e
bind / copy-mode -e \; command-prompt -p "(search down)" "send -X search-forward \"%%%\""

setw -g window-status-style bg=colour11
setw -g window-status-current-style bg=red

set -g status-right "#h | #(date +'%Y-%m-%d')"
# set -g status-right "#{?client_prefix,#[reverse]<Prefix>#[noreverse] | }#h | #(date +'%Y-%m-%d')"
# set -g status-right "#{?client_prefix,<Prefix>} #h | #(date +'%Y-%m-%d')"
# set -g status-right "#[reverse]a#[noreverse] | #h | #(date +'%Y-%m-%d')"

# make window numbers start at 1 so prefix+1 goes to the first window
set -g base-index 1

# automatically renumber sessions in the same way as windows
set-hook -g session-created 'run-shell ~/dotfiles/bin/tmux-session-numbering.sh'
set-hook -g session-closed 'run-shell ~/dotfiles/bin/tmux-session-numbering.sh'

# https://github.com/tmux/tmux/issues/402#issuecomment-356960858
bind -T copy-mode-vi C-c send -X copy-pipe "xclip -sel clip" \; send -X clear-selection
unbind -T copy-mode-vi MouseDragEnd1Pane

# lets you move the cursor by clicking
bind -T copy-mode-vi MouseUp1Pane send-keys -X clear-selection

SCROLL_NUM_LINES=3 # same as vim default

bind -T copy-mode-vi WheelUpPane select-pane \; send-keys -X -N $SCROLL_NUM_LINES scroll-up
bind -T copy-mode-vi WheelDownPane select-pane \; send-keys -X -N $SCROLL_NUM_LINES scroll-down

# the below works with man, but does not work with git diff
# this is because with git diff, less does not enter alternate screen mode
# which is really a good thing since then when closing less the output remains on screen
# but then there is no way to know to pass less arrow keys, without checking for less specifically, which is difficult since less is being run by git
# really less just needs mouse support... which it says it has but ?

# next two bindings ripped straight from
# https://github.com/NHDaly/tmux-better-mouse-mode
bind-key -n WheelUpPane \
	if-shell -Ft= "#{mouse_any_flag}" \
		"send-keys -M" \
		"if -Ft= '#{alternate_on}' \
			\"send-keys -N $SCROLL_NUM_LINES -t= up\" \
			\" \
				select-pane -t= ; \
				send-keys -M ; \
				if -Ft= '#{pane_in_mode}' '' 'copy-mode -e' \
			\" \
		"
bind-key -n WheelDownPane \
	if-shell -Ft= "#{mouse_any_flag}" \
		"send-keys -M" \
		"if -Ft= '#{alternate_on}' \
			\"send-keys -N $SCROLL_NUM_LINES -t= down\" \
			\" \
				select-pane -t= ; \
				send-keys -M \
			\" \
		"

bind C-t \
	set-option -t -g prefix C-b \;\
	unbind C-a \;\
	bind C-b send-prefix \;\
	set -t -g status-right "#[bg=red]UNFOCUSED#[bg=green] | #h | #(date +'%Y-%m-%d')"
bind -n C-p \
	set-option -t -g prefix C-a \;\
	bind C-a send-prefix \;\
	unbind C-b \;\
	set -t -g status-right "#h | #(date +'%Y-%m-%d')"
bind C-p send-keys C-p
# if both parent and child are unfocused, c-b c-p to refocus child

# TODO: something better for copying within ssh
