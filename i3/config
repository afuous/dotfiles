# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see http://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod1

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:monospace 12

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesnâ€™t scale on retina/hidpi displays.

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec i3-sensible-terminal

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
bindsym $mod+d exec dmenu_run
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

bindsym $mod+c focus left
bindsym $mod+v focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
# bindsym $mod+Shift+n split h

# split in vertical orientation
# bindsym $mod+Shift+m split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+Shift+s layout stacking
bindsym $mod+Shift+w layout tabbed
bindsym $mod+Shift+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
# bindsym $mod+a focus parent

# focus the child container
# bindsym $mod+d focus child

# switch to workspace
bindsym $mod+1 workspace 1
bindsym $mod+2 workspace 2
bindsym $mod+3 workspace 3
bindsym $mod+4 workspace 4
bindsym $mod+5 workspace 5
bindsym $mod+6 workspace 6
bindsym $mod+7 workspace 7
bindsym $mod+8 workspace 8
bindsym $mod+9 workspace 9
bindsym $mod+0 workspace 10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace 1
bindsym $mod+Shift+2 move container to workspace 2
bindsym $mod+Shift+3 move container to workspace 3
bindsym $mod+Shift+4 move container to workspace 4
bindsym $mod+Shift+5 move container to workspace 5
bindsym $mod+Shift+6 move container to workspace 6
bindsym $mod+Shift+7 move container to workspace 7
bindsym $mod+Shift+8 move container to workspace 8
bindsym $mod+Shift+9 move container to workspace 9
bindsym $mod+Shift+0 move container to workspace 10

# audio stuff from https://faq.i3wm.org/question/125/how-to-change-the-systems-volume/
# cannotchangevol prevents buttons on side of laptop from changing volume
bindsym XF86AudioRaiseVolume exec "[[ -f ~/.cannotchangevol ]] || pactl set-sink-volume 0 +2%"
bindsym XF86AudioLowerVolume exec "[[ -f ~/.cannotchangevol ]] || pactl set-sink-volume 0 -2%"
bindsym Shift+XF86AudioRaiseVolume exec pactl set-sink-volume 0 +2%
bindsym Shift+XF86AudioLowerVolume exec pactl set-sink-volume 0 -2%
bindsym XF86AudioMute exec amixer -q set Master toggle
bindsym Shift+XF86AudioMute exec "[[ -f ~/.cannotchangevol ]] && rm ~/.cannotchangevol || touch ~/.cannotchangevol"

# screenshots with xclip and scrot
# https://faq.i3wm.org/question/6659/bindsym-for-screenshot-partially-not-working/
bindsym Print exec "scrot"
bindsym --release Control+Print exec "scrot --select &"
bindsym Shift+Print exec "scrot ~/TEMP_scrn.png && xclip -sel clip -t image/png TEMP_scrn.png && rm TEMP_scrn.png"
bindsym --release Control+Shift+Print exec "scrot --select ~/TEMP_scrn.png && xclip -sel clip -t image/png TEMP_scrn.png && rm TEMP_scrn.png"

# set solid black desktop background
exec --no-startup-id xsetroot -solid '#000000'

# open floating terminal
bindsym Control+Mod1+z exec "terminator -T Floating_Terminator --geometry=900x600; sleep 0.5; wmctrl -r Floating_Terminator -T Terminator; wmctrl -r Floating_Terminator -T Terminator"
for_window [class="Terminator" title="Floating_Terminator"] floating enable

# switch to previous workspace
# https://www.reddit.com/r/i3wm/comments/3o2bdn/i3_how_to_quickly_switch_between_current_and/cvtgpiy/
bindsym $mod+grave exec "i3-msg 'workspace back_and_forth'"
bindsym $mod+o exec "i3-msg 'workspace back_and_forth'"

bindsym $mod+n exec "i3-msg 'workspace prev'"
bindsym $mod+m exec "i3-msg 'workspace next'"
bindsym $mod+w exec "i3-msg 'workspace prev'"
bindsym $mod+e exec "i3-msg 'workspace next'"

# copy lyrics link for spotify song
# requires spotify-now
bindsym $mod+Shift+a exec "~/dotfiles/bin/lyrics-spotify.sh | xclip -sel clip"

# previous, next, and play/pause keys
# requires playerctl
# https://faq.i3wm.org/question/3747/enabling-multimedia-keys.1.html
bindsym XF86AudioPlay exec "playerctl play-pause"
bindsym XF86AudioPrev exec "playerctl previous"
bindsym XF86AudioNext exec "playerctl next"

# adjust screen brightness
# https://www.reddit.com/r/linux/comments/268wcy/managing_brightness_on_i3wm/
# requires light
bindsym XF86MonBrightnessDown exec "if [[ $(echo $(light -G)'<5' | bc) -eq 0 ]]; then light -U 5; fi"
bindsym XF86MonBrightnessUp exec light -A 5

# lock screen
# requires i3lock
bindsym Control+Mod1+Mod4+l exec i3lock

# go to next workspace
# bindsym $mod+Tab workspace next
# bindsym $mod+Shift+Tab workspace prev

# scratchpad
bindsym $mod+u move scratchpad
bindsym $mod+i scratchpad show
bindsym $mod+Tab scratchpad show

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym Control+Mod1+Mod4+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
# These bindings trigger as soon as you enter the resize mode

    set $size 10

    # hjkl make the window bigger, Shift+hjkl make the window smaller

    bindsym h resize grow width $size px or $size ppt; move left
    bindsym Shift+h resize shrink width $size px or $size ppt; move right

    bindsym k resize grow height $size px or $size ppt; move up
    bindsym Shift+k resize shrink height $size px or $size ppt; move down

    bindsym j resize grow height $size px or $size ppt
    bindsym Shift+j resize shrink height $size px or $size ppt

    bindsym l resize grow width $size px or $size ppt
    bindsym Shift+l resize shrink width $size px or $size ppt

    # same bindings, but for the arrow keys
    bindsym Left resize shrink width 10 px or 10 ppt
    bindsym Down resize grow height 10 px or 10 ppt
    bindsym Up resize shrink height 10 px or 10 ppt
    bindsym Right resize grow width 10 px or 10 ppt

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
    status_command i3status
}

focus_follows_mouse no
